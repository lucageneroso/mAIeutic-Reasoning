{"task_id": "BigCodeBench/54", "prompt": "Analyze a text by creating a document term matrix with CountVectorizer. The text contains several sentences, each separated by a period. Ignore empty sentences.\nThe function should output with:\nDataFrame: A pandas DataFrame with the document-term matrix. Its column names should be adapted from the vectorizer feature names.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport regex as re\nfrom sklearn.feature_extraction.text import CountVectorizer\ndef task_func(text):\n```\n", "solution": "def task_func(text):\n    # Step 1: separo il testo in frasi usando '.' come separatore\n    # Uso regex split per tenere conto di spazi dopo i punti\n    sentences = re.split(r'\\.\\s*', text)\n    \n    # Step 2: rimuovo eventuali stringhe vuote o spazi bianchi\n    sentences = [s.strip() for s in sentences if s.strip()]\n    \n    # Step 3: creo il CountVectorizer e trasformo le frasi\n    vectorizer = CountVectorizer()\n    X = vectorizer.fit_transform(sentences)\n    \n    # Step 4: costruisco il dataframe con righe=frasi, colonne=features\n    df = pd.DataFrame(X.toarray(), columns=vectorizer.get_feature_names_out())\n    \n    return df\n", "entry_point": "task_func"}
