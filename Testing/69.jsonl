{"task_id": "BigCodeBench/69", "prompt": "Analyze the salary distribution within the department with code 'EMPXX'. Generate random salaries for each employee and create a histogram. - For the department of interest, randomly generate as many salaries as its number of employees. - Make sure that the salary is within SALARY_RANGE. - The histogram title should be 'Salary Distribution in EMPXX Department' - The x-label should be set to 'Salary' - The y-label should be set to 'Number of Employees'\nThe function should output with:\nmatplotlib.axes._axes.Axes: Axes object representing the histogram.\nYou should write self-contained code starting with:\n```\nimport random\nimport matplotlib.pyplot as plt\n# Constants\nSALARY_RANGE = (20000, 100000)\ndef task_func(dict1):\n```", "solution": "import random\nimport matplotlib.pyplot as plt\n# Constants\nSALARY_RANGE = (20000, 100000)\n\ndef task_func(dict1):\n    # Verifico la presenza del dipartimento 'EMPXX'\n    departments = dict1.get(\"departments\", {})\n    employees = departments.get(\"EMPXX\")\n    if employees is None:\n        raise ValueError(\"Department 'EMPXX' not found in input data.\")\n\n    n_employees = len(employees)\n\n    # Genero salari casuali interi nel range\n    salaries = [random.randint(SALARY_RANGE[0], SALARY_RANGE[1]) for _ in range(n_employees)]\n\n    # Creo figura e assi\n    fig, ax = plt.subplots()\n    ax.hist(salaries)\n\n    ax.set_title(\"Salary Distribution in EMPXX Department\")\n    ax.set_xlabel(\"Salary\")\n    ax.set_ylabel(\"Number of Employees\")\n\n    # Ritornare l'oggetto Axes\n    return ax", "entry_point": "task_func"}
